/*
 * This Java source file was generated by the Gradle 'init' task.
 */

 
package github;

import java.time.LocalDate;
import java.util.Scanner;
import java.time.Period;
import javax.swing.*;
import javax.ImageIcon;

public class App {
    Scanner customerInput = new Scanner(System.in);
    ImageIcon icon = new ImageIcon("yes-no.jpg");
    String name;
    String question;
    String questionAsked;
    String dob;
    boolean highschoolAcc=false;
    boolean normalAcc=false;
    boolean checkingAcc=false;
    boolean savingsAcc=false;   
    

    public String getGreeting() {
        return ("\n\nHello and welcoming to The Freedom Bank!\nHere you are free to make transactions that best fits your wishes!\nTo start of with, we would like for you to create an account.");
    }
    public String questionCheck(String questionAsked,String optionOne, String optionTwo){
        String ask;
        if ((questionAsked.equals(optionOne))||(questionAsked.equals(optionOne.toUpperCase()))||(questionAsked.equals(optionOne.toLowerCase()))){
            ask=optionOne;
        }
        else if((questionAsked.equals(optionTwo))||(questionAsked.equals(optionTwo.toUpperCase()))||(questionAsked.equals(optionTwo.toLowerCase()))){
            ask=optionTwo;
        }
        else{
            ask="Invalid";
        }
        return ask;
    }
    public static boolean isString(String str){
        for (int i=0;i<str.length();i++){
            if(Character.isDigit(str.charAt(i))){
                return false;
            }
        }
        return true;
    }
    /*public void customerName(){
        boolean nameValidation;
        name=JOptionPane.showInputDialog("Please type in your full legal name: ");
        nameValidation=isString(name);
        if (nameValidation!=true){
            JOptionPane.showMessageDialog(null,"\nName is not valid, please try again: ");
            customerName();
        }
        else{
            uestion=JOptionPane.showConfirmDialog(null, "Are you sure this is your real name?", "Confirmation", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE,icon);
            if (question.equals("Yes")){
                JOptionPane.showMessageDialog(null,"\n\nOk! Moving on, thank you!");
                JOptionPane.showMessageDialog(null,"\nNice to meet you "+name +"!");
            }
            else if (question.equals("No")) {
                JOptionPane.showMessageDialog(null,"Oh ok. Starting from the top......");
                customerName();
            }
            else{
                JOptionPane.showMessageDialog(null,"Invalid input, please try again");
                customerName();
            }
        }
    } */ 
    public void age() {
       int age=0;
        dob=JOptionPane.showInputDialog(null,"Please type in your date of birth (YYYY-MM-DD): ");
        LocalDate dateOfBirth=LocalDate.parse(dob);
        LocalDate currentDate=LocalDate.now();
        if ((dateOfBirth!=null)&&(currentDate!=null)){
            age=(Period.between(dateOfBirth, currentDate).getYears());
            JOptionPane.showMessageDialog(null,"\nJust to be sure, your DOB is: "+dateOfBirth+"\nTherefore, you are "+age+" years old.");
        }
        if (age<13){
            JOptionPane.showMessageDialog(null,"\nSadly, you don't qualify to have open an account. Good bye!");
            System.exit(0);
        }
        else if((age>=13)&&(age<=17)){
            JOptionPane.showMessageDialog(null,"\nCongratulations, you're qualified to open up a high school account!");
            highschoolAcc=true;
        }
        else if(age>=18){
            JOptionPane.showMessageDialog(null,"\nCongratulations, you're qualified to open up a regular account!");
            normalAcc=true;
        }

    }

    public void createAcc() {
        //customerName();
        age();
        
        }

    public void checkingOrSavings() {
        questionAsked=JOptionPane.showInputDialog(null,"Would what account would you like to open up today? (checking/savings)");
        question=questionCheck(questionAsked,"Checking","Savings");
        if (question.equals("Checking")){
            questionAsked=JOptionPane.showInputDialog(null,"You have chosen an checking account. Is this correct (Yes/No)?");
            question=questionCheck(questionAsked,"Yes","No");
            if (question.equals("Yes")){
                JOptionPane.showMessageDialog(null,"Got it, thank you!");
                checkingAcc=true;

            }
            else if (question.equals("No")) {
                JOptionPane.showMessageDialog(null, "Oh ok. Starting from the top again......");
                checkingOrSavings();
            }
        }
        else if (question.equals("Savings")){
            questionAsked=JOptionPane.showInputDialog(null,"You have chosen an saving account. Is this correct (Yes/No)?");
            question=questionCheck(questionAsked,"Yes","No");
            if (question.equals("Yes")){
                JOptionPane.showMessageDialog(null,"Got it, thank you!");
                savingsAcc=false;
            }
            else if (question.equals("No")) {
                JOptionPane.showMessageDialog(null,"Oh ok. Starting from the top again......");
                checkingOrSavings();
            }
            else{
                JOptionPane.showMessageDialog(null,"Invalid input, please try again");
                checkingOrSavings();
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Invalid input, please try again");
                checkingOrSavings();
        }
    }

    public static void main(String[] args) {
        App bank= new App();
        JOptionPane.showMessageDialog(null,bank.getGreeting());
        bank.createAcc();
        bank.checkingOrSavings();
    }
}
